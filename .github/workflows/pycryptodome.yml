name: "üì¶üöÄ pycryptodome"

on:
  push:
    branches:
    - long_lived/**
    - main
    - release/**
    tags:
    - '**'
  pull_request:
    branches:
    - '**'
  workflow_dispatch:
    inputs:
      version:
        description: "The version to build"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || format('{0}-{1}-{2}', github.ref, github.event_name, github.ref == 'refs/heads/main' && github.sha || '') }}
  cancel-in-progress: true

env:
  default_version: '3.15.0'

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: ${{ matrix.os.emoji }} üì¶ Build
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - matrix: macos
            emoji: üçé
            runs-on: [macOS, arm64]
    steps:
      - name: Clean workspace
        uses: Chia-Network/actions/clean-workspace@main

      - name: Get source dist
        run: |
          python -m venv venv
          . ./venv/bin/activate
          pip download --no-deps --no-binary :all: --dest packages pycryptodome==${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || env.default_version }}

      - name: Untar
        run: |
          tar -xvzf packages/pycryptodome-*
          mv pycryptodome-* source

      - name: Build and test
        uses: pypa/cibuildwheel@v2.7.0
        with:
          package-dir: source
          output-dir: dist
        env:
          CIBW_BUILD_VERBOSITY_MACOS: 0
          CIBW_BUILD: cp38-*
          CIBW_ARCHS_MACOS: arm64

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: wheel
          path: ./dist
          if-no-files-found: error

  upload:
    name: üöÄ Upload
    runs-on: [k8s-internal]
    needs: build
    container:
      image: alpine:latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/upload
        with:
          package_name: pycryptodome
          artifact_name: wheel
          enable: ${{ github.event_name == 'workflow_dispatch' }}
          vault_url: ${{ secrets.VAULT_URL }}
