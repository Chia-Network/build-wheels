name: "Build pycryptodome Wheels"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to build"
        required: true
        default: ""

concurrency:
  group: "pycryptodome-${{ github.event.inputs.version }}"

jobs:
  build_wheel:
    runs-on: [macOS, ARM64]
    steps:
      - name: Clean workspace
        uses: Chia-Network/actions/clean-workspace@main

      - uses: Chia-Network/actions/setup-python@main
        with:
          python-version: "3.9"

      - name: Get source dist
        run: |
          python -m venv venv
          . ./venv/bin/activate
          pip download --no-deps --no-binary :all: pycryptodome==${{ github.event.inputs.version }}

      - name: Untar
        run: |
          tar -xvzf pycryptodome-${{ github.event.inputs.version }}.tar.gz

      - name: Build and test
        uses: pypa/cibuildwheel@v2.7.0
        with:
          package-dir: pycryptodome-${{ github.event.inputs.version }}
          output-dir: dist
        env:
          CIBW_BUILD_VERBOSITY_MACOS: 0
          CIBW_BUILD: cp38-*
          CIBW_ARCHS_MACOS: arm64

      - uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: ./dist

  upload:
    runs-on: [k8s-internal]
    container:
      image: alpine:latest
    needs:
      - build_wheel
    steps:
      - name: Install deps
        run: apk add aws-cli

      - name: Vault Login
        uses: Chia-Network/actions/vault/login@main
        with:
          vault_url: ${{ secrets.VAULT_URL }}
          role_name: github

      - name: Get ephemeral aws credentials
        uses: Chia-Network/actions/vault/aws-sts@main
        with:
          vault_url: ${{ secrets.VAULT_URL }}
          vault_token: ${{ env.VAULT_TOKEN }}
          role_name: bootstrap

      - uses: actions/download-artifact@v3
        with:
          name: wheel
          path: ./dist

      - name: Upload Wheels
        run: |
          aws s3 cp dist/pycryptodome-* s3://download.chia.net/simple/pycryptodome/
