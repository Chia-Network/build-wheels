name: "üì¶üöÄ psutil"

on:
  push:
    branches:
    - long_lived/**
    - main
    - release/**
    tags:
    - '**'
  pull_request:
    branches:
    - '**'
  workflow_dispatch:
    inputs:
      version:
        description: "The version to build"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || format('{0}-{1}-{2}', github.ref, github.event_name, github.ref == 'refs/heads/main' && github.sha || '') }}
  cancel-in-progress: true

env:
  default_version: '5.9.4'

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: ${{ matrix.os.emoji }} üì¶ Build ${{ matrix.arch.name }} ${{ matrix.python.major-dot-minor }}
    runs-on: ${{ matrix.os.runs-on[matrix.arch.matrix] }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: macOS
            matrix: macos
            emoji: üçé
            runs-on:
              arm: [macOS, ARM64]
              intel: [macos-latest]
            cibw-archs-macos:
              arm: arm64
              intel: x86_64
            macosx-deployment-target:
              arm: 11.0
              intel: 10.14
          - name: Linux
            matrix: linux
            emoji: üêß
            runs-on:
              arm: [Linux, ARM64]
              intel: [ubuntu-latest]
          - name: Windows
            matrix: windows
            emoji: ü™ü
            runs-on:
              intel: [windows-latest]
        python:
          - major-dot-minor: '3.7'
            cibw-build: 'cp37-*'
            manylinux:
              arch: manylinux2014
              intel: manylinux2010
            matrix: '3.7'
          - major-dot-minor: '3.8'
            cibw-build: 'cp38-*'
            manylinux:
              arch: manylinux2014
              intel: manylinux2010
            matrix: '3.8'
        arch:
          - name: ARM
            matrix: arm
          - name: Intel
            matrix: intel
        exclude:
          - os:
              matrix: windows
            arch:
              matrix: arm
          # building abi3 so only need one per os
          - os:
              matrix: linux
            python:
              matrix: '3.8'
          - os:
              matrix: macos
            python:
              matrix: '3.7'
          - os:
              matrix: windows
            python:
              matrix: '3.8'
    steps:
      - name: Clean workspace
        uses: Chia-Network/actions/clean-workspace@main

      - uses: Chia-Network/actions/setup-python@main
        with:
          python-version: "3.9"

      - uses: Chia-Network/actions/create-venv@main
        id: create-venv

      - uses: Chia-Network/actions/activate-venv@main
        with:
          directories: ${{ steps.create-venv.outputs.activate-venv-directories }}

      - name: Get source dist
        run: |
          pip download --no-deps --no-binary :all: --dest packages psutil==${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || env.default_version }}

      - name: Untar
        run: |
          tar -xvzf packages/psutil-*
          mv psutil-* source

      - name: Pull out test files
        run: |
          mkdir psutil
          cp -R source/psutil/tests psutil/
          find $(pwd)/psutil/

      - name: Install tools
        run: |
          pip install cibuildwheel==2.11.2

      - name: Build and test
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.os.cibw-archs-macos[matrix.arch.matrix] }}
          CIBW_BUILD: ${{ matrix.python.cibw-build }}
          CIBW_ENVIRONMENT_MACOS: "MACOSX_DEPLOYMENT_TARGET=${{ matrix.arch.matrix == 'intel' && '10.14' || '11.0' }}"
          CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.python.manylinux['arm'] }}
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.python.manylinux['intel'] }}
          CIBW_PRERELEASE_PYTHONS: True
          CIBW_SKIP: '*-manylinux_i686 *-win32 *-musllinux_*'
          # skipping tests due to failures such as mentioned at https://github.com/giampaolo/psutil/issues/1972#issuecomment-1329780597
          CIBW_TEST_SKIP: "*-*linux_aarch64"
        run: |
          cibuildwheel source --output-dir dist

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: wheel
          path: ./dist
          if-no-files-found: error

  upload:
    name: üöÄ Upload
    runs-on: [k8s-internal]
    needs: build
    container:
      image: alpine:latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/upload
        with:
          package_name: psutil
          artifact_name: wheel
          dry_run: ${{ github.event_name != 'workflow_dispatch' }}
          vault_url: ${{ secrets.VAULT_URL }}
