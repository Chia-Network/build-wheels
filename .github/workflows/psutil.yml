name: "Build psutil Wheels"

on:
  push:
    branches:
    - long_lived/**
    - main
    - release/**
    tags:
    - '**'
  pull_request:
    branches:
    - '**'
  workflow_dispatch:
    inputs:
      version:
        description: "The version to build"
        required: true

concurrency:
  # note that this does not work for latest
  group: ${{ github.workflow }}-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || format('{0}-{1]-{2}', github.ref, github.event_name, github.ref == 'refs/heads/main' && github.sha || '') }}

env:
  default_version: '5.9.1'

permissions:
  id-token: write
  contents: read

jobs:
  build_wheel:
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: macos
            runs-on: [macOS, arm64]
          - name: linux
            runs-on: [linux, arm64]
    steps:
      - name: Clean workspace
        uses: Chia-Network/actions/clean-workspace@main

      - uses: Chia-Network/actions/setup-python@main
        with:
          python-version: "3.9"

      - name: Get source dist
        run: |
          python -m venv venv
          . ./venv/bin/activate
          pip download --no-deps --no-binary :all: --dest packages psutil==${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || env.default_version }}

      - name: Untar
        run: |
          tar -xvzf packages/psutil-*
          mv psutil-* source

      - name: Build and test
        uses: pypa/cibuildwheel@v2.7.0
        with:
          package-dir: source
          output-dir: dist
        env:
          CIBW_BUILD_VERBOSITY_MACOS: 0
          CIBW_BUILD: cp37-* cp38-* cp39-* cp310-*
          CIBW_ARCHS_MACOS: arm64
          CIBW_ARCHS_LINUX: aarch64

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: wheel
          path: ./dist
          if-no-files-found: error

  upload:
    runs-on: [k8s-internal]
    container:
      image: alpine:latest
    needs:
      - build_wheel
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheel
          path: ./dist

      - name: Install deps
        run: apk add aws-cli

      - name: Vault Login
        uses: Chia-Network/actions/vault/login@main
        with:
          vault_url: ${{ secrets.VAULT_URL }}
          role_name: github

      - name: Get ephemeral aws credentials
        uses: Chia-Network/actions/vault/aws-sts@main
        with:
          vault_url: ${{ secrets.VAULT_URL }}
          vault_token: ${{ env.VAULT_TOKEN }}
          role_name: bootstrap

      - name: Upload Wheels
        if: github.event_name == 'workflow_dispatch'
        working-directory: dist
        run: |
          echo just showing that we're running here, would be uploading to s3
          # TODO: enable once we think it is properly gated
          # find . -type f -name "psutil-*" | xargs -I % sh -c 'aws s3 cp % s3://download.chia.net/simple/psutil/'
