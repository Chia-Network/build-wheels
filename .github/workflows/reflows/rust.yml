name: "üì¶üöÄ build rust"

on:
  workflow_call:
    inputs:
      distribution-name:
        required: true
        type: string
      import-name:
        required: true
        type: string
      version:
        required: true
        type: string
      pip_options:
        default: ''
        required: false
        type: string
      only-major-dot-minor:
        default: 'include all'
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || format('{0}-{1}-{2}', github.ref, github.event_name, github.ref == 'refs/heads/main' && github.sha || '') }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: ${{ matrix.os.emoji }} üì¶ Build ${{ matrix.python.major-dot-minor }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: Linux
            file-name: linux
            matrix: linux
            emoji: üêß
            runs-on: [ubuntu-latest]
        arch:
          - name: RISC
            file-name: risc
            matrix: risc
        python:
          - major-dot-minor: '3.8'
            matrix: '3.8'
          - major-dot-minor: '3.9'
            matrix: '3.9'
          - major-dot-minor: '3.10'
            matrix: '3.10'
          - major-dot-minor: '3.11'
            matrix: '3.11'
          - major-dot-minor: '3.12'
            matrix: '3.12'
        exclude:
          - python:
              major-dot-minor: ${{ (inputs.only-major-dot-minor == 'include all' || inputs.only-major-dot-minor == '3.8') && 'exclude nothing' || '3.8' }}
          - python:
              major-dot-minor: ${{ (inputs.only-major-dot-minor == 'include all' || inputs.only-major-dot-minor == '3.9') && 'exclude nothing' || '3.9' }}
          - python:
              major-dot-minor: ${{ (inputs.only-major-dot-minor == 'include all' || inputs.only-major-dot-minor == '3.10') && 'exclude nothing' || '3.10' }}
          - python:
              major-dot-minor: ${{ (inputs.only-major-dot-minor == 'include all' || inputs.only-major-dot-minor == '3.11') && 'exclude nothing' || '3.11' }}
          - python:
              major-dot-minor: ${{ (inputs.only-major-dot-minor == 'include all' || inputs.only-major-dot-minor == '3.12') && 'exclude nothing' || '3.12' }}

    env:
      FILE_NAME: ${{ matrix.os.file-name }}-${{ matrix.arch.file-name }}-${{ matrix.python.major-dot-minor }}

    steps:
      - name: Clean workspace
        uses: Chia-Network/actions/clean-workspace@main

      - uses: Chia-Network/actions/setup-python@main
        with:
          python-version: "3.10"

      - uses: Chia-Network/actions/create-venv@main
        id: create-venv

      - uses: Chia-Network/actions/activate-venv@main
        with:
          directories: ${{ steps.create-venv.outputs.activate-venv-directories }}

      - name: Get source dist
        run: |
          pip download --no-deps --only-binary :all: --no-binary ${{ inputs.distribution-name }} --extra-index-url https://pypi.chia.net/simple/ --dest packages ${{ inputs.distribution-name }}==${{ inputs.version }}

      - name: Untar
        run: |
          tar -xvzf packages/${{ inputs.distribution-name }}-*
          mv ${{ inputs.distribution-name }}-* source

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Set up QEMU on x86_64
        if: matrix.arch.matrix == 'risc'
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: riscv64

      - name: Build wheel
        run: |
          docker run --rm --platform linux/riscv64 \
          -v ${{ github.workspace }}:/ws \
          -v "${SCCACHE_PATH}":/sccache \
          -e SCCACHE_PATH="/sccache" \
          -e SCCACHE_GHA_ENABLED=true \
          -e ACTIONS_CACHE_URL="${ACTIONS_CACHE_URL}" \
          -e ACTIONS_RUNTIME_TOKEN="${ACTIONS_RUNTIME_TOKEN}" \
          -e RUSTC_WRAPPER=sccache \
          --workdir=/ws \
          chianetwork/ubuntu-22.04-risc-builder:latest \
          bash -exc '\
          ld --version && \
          pyenv global ${{ matrix.python.matrix }} && \
          python3 -m venv venv && \
          source ./venv/bin/activate && \
          pip install --upgrade pip && \
          pip wheel -vvv --only-binary :all: --extra-index-url https://pypi.chia.net/simple/ -w dist ./source \
          '

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: wheel-${{ env.FILE_NAME }}
          path: ./dist
          if-no-files-found: error

  upload:
    name: üöÄ Upload
    runs-on: [k8s-internal]
    needs: build
    container:
      image: alpine:latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/upload
        with:
          package_name: ${{ inputs.distribution-name }}
          artifact_name: wheel
          dry_run: ${{ github.event_name != 'workflow_dispatch' }}
          vault_url: ${{ secrets.VAULT_URL }}
          aws_account: ${{ secrets.CHIA_AWS_ACCOUNT_ID }}
